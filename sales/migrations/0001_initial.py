# Generated by Django 5.0.6 on 2025-07-19 10:19

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('branches', '0001_initial'),
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=200, unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('amount', models.FloatField()),
                ('discount_type', models.CharField(choices=[('fixed', 'fixed'), ('percentage', 'percentage')], max_length=30)),
                ('min_price', models.FloatField(null=True)),
                ('max_price', models.FloatField(null=True)),
                ('quantity', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('national_number', models.CharField(max_length=200, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(max_length=100)),
                ('gender', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('amount', models.FloatField()),
                ('discount_type', models.CharField(choices=[('fixed', 'fixed'), ('percentage', 'percentage')], max_length=30)),
                ('has_products', models.BooleanField()),
                ('has_categories', models.BooleanField()),
                ('for_every_product', models.BooleanField(default=False)),
                ('for_every_product_exept', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Discount_Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_options', models.BooleanField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.category')),
                ('discount', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sales.discount')),
            ],
        ),
        migrations.CreateModel(
            name='Discount_Category_Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sales.discount_category')),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.option')),
            ],
        ),
        migrations.AddField(
            model_name='discount_category',
            name='options',
            field=models.ManyToManyField(through='sales.Discount_Category_Option', to='products.option'),
        ),
        migrations.CreateModel(
            name='Discount_Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_options', models.BooleanField()),
                ('discount', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sales.discount')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='Discount_Product_Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discount_product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sales.discount_product')),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.option')),
            ],
        ),
        migrations.AddField(
            model_name='discount_product',
            name='options',
            field=models.ManyToManyField(through='sales.Discount_Product_Option', to='products.option'),
        ),
        migrations.CreateModel(
            name='Offer_Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('has_options', models.BooleanField()),
                ('quantity', models.PositiveBigIntegerField()),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sales.offer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='Offer_Product_Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer_product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sales.offer_product')),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.option')),
            ],
        ),
        migrations.AddField(
            model_name='offer_product',
            name='options',
            field=models.ManyToManyField(through='sales.Offer_Product_Option', to='products.option'),
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'pending'), ('processing', 'processing'), ('completed', 'completed'), ('cancelled', 'cancelled')], default='pending', max_length=100)),
                ('date_of_purchase', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('subtotal_price', models.FloatField(default=0)),
                ('total_price', models.FloatField(default=0)),
                ('has_coupons', models.BooleanField(default=False)),
                ('has_offers', models.BooleanField(default=False)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='branches.branch')),
                ('coupon', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='sales.coupon')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sales.customer')),
                ('purchased_offers', models.ManyToManyField(to='sales.offer')),
            ],
        ),
        migrations.CreateModel(
            name='Purchased_Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wholesale_price', models.FloatField()),
                ('selling_price', models.FloatField()),
                ('total_price', models.FloatField()),
                ('has_discount', models.BooleanField(default=False)),
                ('in_pack', models.BooleanField(default=False)),
                ('quantity', models.PositiveIntegerField()),
                ('discount', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='sales.discount')),
                ('offer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='sales.offer')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='products.variant')),
                ('purchase', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='sales.purchase')),
            ],
        ),
    ]
